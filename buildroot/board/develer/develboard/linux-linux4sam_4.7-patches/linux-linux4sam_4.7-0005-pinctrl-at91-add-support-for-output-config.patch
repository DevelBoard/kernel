From 748241f0471432bfa0a2b3642d12107b2293b20b Mon Sep 17 00:00:00 2001
From: Mirko Damiani <mirko@develer.com>
Date: Tue, 19 May 2015 14:19:43 +0200
Subject: [PATCH] pinctrl: at91: add support for output config
Organization: Develer S.r.l.

---
 .../bindings/pinctrl/atmel,at91-pinctrl.txt        |  2 ++
 drivers/pinctrl/pinctrl-at91.c                     | 22 ++++++++++++++++++++++
 include/dt-bindings/pinctrl/at91.h                 |  2 ++
 3 files changed, 26 insertions(+)

diff --git a/Documentation/devicetree/bindings/pinctrl/atmel,at91-pinctrl.txt b/Documentation/devicetree/bindings/pinctrl/atmel,at91-pinctrl.txt
index b7a93e8..a1d74bd 100644
--- a/Documentation/devicetree/bindings/pinctrl/atmel,at91-pinctrl.txt
+++ b/Documentation/devicetree/bindings/pinctrl/atmel,at91-pinctrl.txt
@@ -92,6 +92,8 @@ MULTIDRIVE	(1 << 1): indicate this pin needs to be configured as multi-drive.
 DEGLITCH	(1 << 2): indicate this pin needs deglitch.
 PULL_DOWN	(1 << 3): indicate this pin needs a pull down.
 DIS_SCHMIT	(1 << 4): indicate this pin needs to the disable schmitt trigger.
+OUTPUT		(1 << 5): indicate this pin need to be configured as an output.
+OUTPUT_VAL	(1 << 6): output val (1 = high, 0 = low)
 DRIVE_STRENGTH (3 << 5): indicate the drive strength of the pin using the
 			following values:
 				00 - No change (reset state value kept)
diff --git a/drivers/pinctrl/pinctrl-at91.c b/drivers/pinctrl/pinctrl-at91.c
index 6f1eba3..a0764e2 100644
--- a/drivers/pinctrl/pinctrl-at91.c
+++ b/drivers/pinctrl/pinctrl-at91.c
@@ -56,6 +56,9 @@ static int gpio_banks;
 #define DEGLITCH	(1 << 2)
 #define PULL_DOWN	(1 << 3)
 #define DIS_SCHMIT	(1 << 4)
+#define OUTPUT		(1 << 5)
+#define OUTPUT_VAL_SHIFT	6
+#define OUTPUT_VAL	(1 << OUTPUT_VAL_SHIFT)
 #define DRIVE_STRENGTH_SHIFT	5
 #define DRIVE_STRENGTH_MASK		0x3
 #define DRIVE_STRENGTH   (DRIVE_STRENGTH_MASK << DRIVE_STRENGTH_SHIFT)
@@ -375,6 +378,19 @@ static void at91_mux_set_pullup(void __iomem *pio, unsigned mask, bool on)
 	writel_relaxed(mask, pio + (on ? PIO_PUER : PIO_PUDR));
 }
 
+static bool at91_mux_get_output(void __iomem *pio, unsigned pin, bool *val)
+{
+	*val = (readl_relaxed(pio + PIO_ODSR) >> pin) & 0x1;
+	return (readl_relaxed(pio + PIO_OSR) >> pin) & 0x1;
+}
+
+static void at91_mux_set_output(void __iomem *pio, unsigned mask, bool is_on,
+				bool val)
+{
+	writel_relaxed(mask, pio + (val ? PIO_SODR : PIO_CODR));
+	writel_relaxed(mask, pio + (is_on ? PIO_OER : PIO_ODR));
+}
+
 static unsigned at91_mux_get_multidrive(void __iomem *pio, unsigned pin)
 {
 	return (readl_relaxed(pio + PIO_MDSR) >> pin) & 0x1;
@@ -844,6 +860,7 @@ static int at91_pinconf_get(struct pinctrl_dev *pctldev,
 	void __iomem *pio;
 	unsigned pin;
 	int div;
+	bool out;
 
 	*config = 0;
 	dev_dbg(info->dev, "%s:%d, pin_id=%d", __func__, __LINE__, pin_id);
@@ -868,6 +885,9 @@ static int at91_pinconf_get(struct pinctrl_dev *pctldev,
 		*config |= (info->ops->get_drivestrength(pio, pin)
 				<< DRIVE_STRENGTH_SHIFT);
 
+	if (at91_mux_get_output(pio, pin, &out))
+		*config |= OUTPUT | (out << OUTPUT_VAL_SHIFT);
+
 	return 0;
 }
 
@@ -895,6 +915,8 @@ static int at91_pinconf_set(struct pinctrl_dev *pctldev,
 		if (config & PULL_UP && config & PULL_DOWN)
 			return -EINVAL;
 
+		at91_mux_set_output(pio, mask, config & OUTPUT,
+			(config & OUTPUT_VAL) >> OUTPUT_VAL_SHIFT);
 		at91_mux_set_pullup(pio, mask, config & PULL_UP);
 		at91_mux_set_multidrive(pio, mask, config & MULTI_DRIVE);
 		if (info->ops->set_deglitch)
diff --git a/include/dt-bindings/pinctrl/at91.h b/include/dt-bindings/pinctrl/at91.h
index bbca3d0..db91584 100644
--- a/include/dt-bindings/pinctrl/at91.h
+++ b/include/dt-bindings/pinctrl/at91.h
@@ -15,6 +15,8 @@
 #define AT91_PINCTRL_DEGLITCH		(1 << 2)
 #define AT91_PINCTRL_PULL_DOWN		(1 << 3)
 #define AT91_PINCTRL_DIS_SCHMIT		(1 << 4)
+#define AT91_PINCTRL_OUTPUT			(1 << 5)
+#define AT91_PINCTRL_OUTPUT_VAL(x)	((x & 0x1) << 6)
 #define AT91_PINCTRL_DEBOUNCE		(1 << 16)
 #define AT91_PINCTRL_DEBOUNCE_VAL(x)	(x << 17)
 
-- 
1.9.1

